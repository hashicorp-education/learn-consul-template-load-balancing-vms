# ++-----------
# ||   00 - Global Variables
# ++------

# ++-------------------+
# || Cloud Provider    |
# ++-------------------+

## Used to have conditional code for different cloud providers.
export SCENARIO_CLOUD_PROVIDER=${cloud_provider}

# ++-----------------------------+
# || Consul Control Plane        |
# ++-----------------------------+

export CONSUL_DATACENTER="${consul_datacenter}"
export CONSUL_DOMAIN="${consul_domain}"

export CONSUL_SERVER_NUMBER="${server_number}"
export CONSUL_RETRY_JOIN="${retry_join}"

## This log level will be applied to all Consul agents
export LOG_LEVEL="${log_level}"

# ++-----------------------------+
# || Consul Services             |
# ++-----------------------------+

export hashicups_db_NUMBER="${hc_db_number}"
export hashicups_api_NUMBER="${hc_api_number}"
export hashicups_frontend_NUMBER="${hc_fe_number}"
export hashicups_nginx_NUMBER="${hc_lb_number}"

export api_gw_NUMBER="${api_gw_number}"
export term_gw_NUMBER="${term_gw_number}"
export mesh_gw_NUMBER="${mesh_gw_number}"
export consul_esm_NUMBER="${consul_esm_number}"

# Used to decide if the monitoring tools need to be provisioned. 
# Is also used in service mesh scenarios to configure or not grafana-agent on the nodes.
export ENABLE_MONITORING="${start_monitoring_suite}"

## Used to decide if the monitoring tools service have to be registered in Consul as external services.
export EMS_FOR_MONITORING="${register_monitoring_suite}"

export ENABLE_SERVICE_MESH="${enable_service_mesh}"

export SOLVE_SCENARIO="${solve_scenario}"

# ++-------------------+
# || Provision Details |
# ++-------------------+

## These define the workbench on the remote Bastion Host machine
USER="admin"
WORKDIR="/home/$${USER}/"

## [crit] [flow] CRITICAL POINT !!! - Scenario PATHS configuration
## todo: this VAR collides with the local var ASSETS 
## In case the scenario is present and execution is local 
## (which means we are running on the local machine)
ASSETS="$${WORKDIR}assets/"
LOGS="$${WORKDIR}logs/"
OPS="$${WORKDIR}ops/"

SCENARIO_OUTPUT_FOLDER="$${ASSETS}scenario/"

## Automatically accept certificates of remote nodes
SSH_OPTS="-o StrictHostKeyChecking=accept-new -o ConnectTimeout=10 -o PubkeyAcceptedAlgorithms=+ssh-rsa"
SSH_OPTS="-o StrictHostKeyChecking=accept-new -o ConnectTimeout=10"
SCP_OPTS="-o StrictHostKeyChecking=accept-new -o ConnectTimeout=10"

## This is how to locate SSH certificate on the Bastion Host
SSH_CERT="$${WORKDIR}certs/id_rsa"

# ++-------------------+
# || Bastion Services  |
# ++-------------------+


# ++-------------------+
# || Consul Flow       |
# ++-------------------+